name: Java CI,CD with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    services:
      database:
        image: postgres:17.4
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres -d test"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test
      redis:
        image: redis:8.0-M04-alpine3.21
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 10s
          --health-retries 5
    env:
      SPRING_PROFILES_ACTIVE: test
      DB_URL: jdbc:postgresql://localhost:5432/test
      DB_USER: postgres
      DB_PASSWORD: postgres
      CACHE_URL: localhost
      CACHE_PORT: 6379
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'corretto'
          cache: maven

      - name: Run tests and build with Maven
        run: mvn clean package

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set repository owner lowercase
        run: echo "REPO_OWNER_LC=${GITHUB_REPOSITORY_OWNER,,}" >> $GITHUB_ENV

      - name: Build Docker image
        run: docker build -f Dockerfile-cd -t ghcr.io/${REPO_OWNER_LC}/spring-backend:latest .

      - name: Push Docker image
        run: docker push ghcr.io/${REPO_OWNER_LC}/spring-backend:latest